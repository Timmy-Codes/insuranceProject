/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignment03;

import java.awt.HeadlessException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author timgl
 */
public class AdminUI extends javax.swing.JFrame {
    
    InsuranceCompany company;
    UserLogin login;
    ArrayList<String> cities;
    User user;
    ArrayList<String> userList;
    ArrayList<String> policyIdList;
    
    /**
     * Creates new form adminLogin
     * @param company
     * @param login
     * @param cities
     */
    public AdminUI(InsuranceCompany company, UserLogin login, ArrayList<String> cities) {
        
        this.company = company;
        this.login = login;
        this.cities = cities;
        
        initComponents();
        onLogin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePopMenu = new javax.swing.JPopupMenu();
        Delete = new javax.swing.JMenuItem();
        Update = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        adminUserText = new javax.swing.JTextField();
        adminPassText = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        flatRateText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        reportLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        reportByCityLabel = new javax.swing.JLabel();
        byCityBut = new javax.swing.JButton();
        reportByCityLabel1 = new javax.swing.JLabel();
        byCityBut1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        reportArea = new javax.swing.JTextArea();
        reportLabel1 = new javax.swing.JLabel();
        reportClearBut = new javax.swing.JButton();
        rateUpdateBut = new javax.swing.JButton();
        passUpdateBut = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        ClientInformation = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        clientNameCheck = new javax.swing.JCheckBox();
        premiumCheck = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clientSaveBut = new javax.swing.JButton();
        clientLoadBut = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        EditPersonalData = new javax.swing.JPanel();
        idText = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordText = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        streetNumLabel = new javax.swing.JLabel();
        streetNumText = new javax.swing.JTextField();
        streetLabel = new javax.swing.JLabel();
        streetText = new javax.swing.JTextField();
        suburbLabel = new javax.swing.JLabel();
        suburbText = new javax.swing.JTextField();
        cityLabel = new javax.swing.JLabel();
        cityCombo = new javax.swing.JComboBox<>();
        cityChoice = new javax.swing.JCheckBox();
        saveButton = new javax.swing.JButton();
        cityText = new javax.swing.JTextField();
        clientText = new javax.swing.JLabel();
        clientCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        addressLabel1 = new javax.swing.JLabel();
        AddPolicy = new javax.swing.JPanel();
        thirdPartyRadio = new javax.swing.JRadioButton();
        comprehensiveRadio = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        policyHolderText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        policyIdText = new javax.swing.JTextField();
        vehicleDetailsLabel = new javax.swing.JLabel();
        carComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        modelText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buildYearText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        expiryLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        expYearText = new javax.swing.JTextField();
        expMonthText = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        expDayText = new javax.swing.JTextField();
        commentAgeLabel = new javax.swing.JLabel();
        commentAgeText = new javax.swing.JTextField();
        levelLabel = new javax.swing.JLabel();
        levelText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        claimsText = new javax.swing.JTextField();
        clientLabel = new javax.swing.JLabel();
        clientCombo1 = new javax.swing.JComboBox<>();
        usernameText1 = new javax.swing.JTextField();
        idLabel1 = new javax.swing.JLabel();
        nameLabel1 = new javax.swing.JLabel();
        nameText1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        vehicleDetailsLabel1 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        FindPolicy = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        policyArea = new javax.swing.JTextArea();
        findButton1 = new javax.swing.JButton();
        clientLabel1 = new javax.swing.JLabel();
        policyCombo = new javax.swing.JComboBox<>();
        clientCombo2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        PolicyInfo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        policyTable = new javax.swing.JTable();
        delBut = new javax.swing.JButton();
        updateBut = new javax.swing.JButton();
        clientCombo3 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        FilterPolicies = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        policyTable1 = new javax.swing.JTable();
        modelFilterText = new javax.swing.JTextField();
        modelFilterLabel = new javax.swing.JLabel();
        dateFilterText = new javax.swing.JTextField();
        dateFilterLabel = new javax.swing.JLabel();
        byDateBut = new javax.swing.JButton();
        sortCheck = new javax.swing.JCheckBox();
        clientCombo4 = new javax.swing.JComboBox<>();
        clientLabel4 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        clientLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        logoutMenu = new javax.swing.JMenu();

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        tablePopMenu.add(Delete);

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        tablePopMenu.add(Update);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setForeground(new java.awt.Color(255, 51, 102));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("YouDing Insurance Pty Ltd");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Admin UserName");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Admin Password");

        adminUserText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        adminUserText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminUserTextActionPerformed(evt);
            }
        });

        adminPassText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Set Flat Rate");

        flatRateText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        flatRateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatRateTextActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel22.setText("Login Details");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel23.setText("Adjust Policy Rate (whole dollars)");

        reportLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        reportLabel.setText("Report View Pane");

        reportByCityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reportByCityLabel.setText("Reporting - Total Payments By City");

        byCityBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        byCityBut.setForeground(new java.awt.Color(255, 51, 102));
        byCityBut.setText("GENERATE");
        byCityBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byCityButActionPerformed(evt);
            }
        });

        reportByCityLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reportByCityLabel1.setText("Reporting - Total Payments By Car Model");

        byCityBut1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        byCityBut1.setForeground(new java.awt.Color(255, 51, 102));
        byCityBut1.setText("GENERATE");
        byCityBut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byCityBut1ActionPerformed(evt);
            }
        });

        reportArea.setEditable(false);
        reportArea.setBackground(new java.awt.Color(239, 255, 255));
        reportArea.setColumns(20);
        reportArea.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        reportArea.setRows(5);
        reportArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 255, 255), new java.awt.Color(0, 102, 153), new java.awt.Color(0, 204, 204)));
        jScrollPane4.setViewportView(reportArea);

        reportLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        reportLabel1.setText("Generate Reports");

        reportClearBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reportClearBut.setForeground(new java.awt.Color(255, 51, 102));
        reportClearBut.setText("CLEAR");
        reportClearBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportClearButActionPerformed(evt);
            }
        });

        rateUpdateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rateUpdateBut.setForeground(new java.awt.Color(255, 51, 102));
        rateUpdateBut.setText("UPDATE");
        rateUpdateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateUpdateButActionPerformed(evt);
            }
        });

        passUpdateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        passUpdateBut.setForeground(new java.awt.Color(255, 51, 102));
        passUpdateBut.setText("UPDATE");
        passUpdateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passUpdateButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reportClearBut)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(reportByCityLabel1)
                                            .addComponent(reportByCityLabel))
                                        .addGap(62, 62, 62)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(byCityBut1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(byCityBut)))
                                    .addComponent(reportLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel21))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(adminPassText, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(passUpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(adminUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(flatRateText, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rateUpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(50, 50, 50)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reportLabel)
                                .addComponent(jScrollPane4)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(reportLabel)
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(adminUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(adminPassText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passUpdateBut))
                        .addGap(64, 64, 64)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(flatRateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rateUpdateBut))
                        .addGap(73, 73, 73)
                        .addComponent(reportLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reportByCityLabel)
                            .addComponent(byCityBut))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reportByCityLabel1)
                            .addComponent(byCityBut1))))
                .addGap(18, 18, 18)
                .addComponent(reportClearBut)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Administration", jPanel1);

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", "Name", "Address", "Total Premiums"
            }
        ));
        jScrollPane5.setViewportView(clientTable);

        clientNameCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientNameCheck.setText("Sort by Client Name");
        clientNameCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNameCheckActionPerformed(evt);
            }
        });

        premiumCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        premiumCheck.setText("Sort by Premium");
        premiumCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                premiumCheckActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Save Client List to Text File");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Load Client List from Text File");

        clientSaveBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clientSaveBut.setForeground(new java.awt.Color(255, 51, 102));
        clientSaveBut.setText("SAVE");
        clientSaveBut.setToolTipText("");
        clientSaveBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientSaveButActionPerformed(evt);
            }
        });

        clientLoadBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clientLoadBut.setForeground(new java.awt.Color(255, 51, 102));
        clientLoadBut.setText("LOAD");
        clientLoadBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientLoadButActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Sort List");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Import / Export Client List");
        jLabel6.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Client List");

        javax.swing.GroupLayout ClientInformationLayout = new javax.swing.GroupLayout(ClientInformation);
        ClientInformation.setLayout(ClientInformationLayout);
        ClientInformationLayout.setHorizontalGroup(
            ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientInformationLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(ClientInformationLayout.createSequentialGroup()
                            .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(ClientInformationLayout.createSequentialGroup()
                                    .addComponent(clientNameCheck)
                                    .addGap(61, 61, 61)
                                    .addComponent(premiumCheck))
                                .addComponent(jLabel5))
                            .addGap(218, 218, 218)
                            .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientInformationLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(clientSaveBut)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(clientLoadBut))
                                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        ClientInformationLayout.setVerticalGroup(
            ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientInformationLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientInformationLayout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientNameCheck)
                            .addComponent(premiumCheck)))
                    .addGroup(ClientInformationLayout.createSequentialGroup()
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClientInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(clientSaveBut)
                            .addComponent(jLabel4)
                            .addComponent(clientLoadBut))))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Client Information", ClientInformation);

        idText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        idLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idLabel.setText("User ID");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Name");

        nameText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        usernameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usernameLabel.setText("Username");

        usernameText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordLabel.setText("Password");

        passwordText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addressLabel.setText("Address Information");

        streetNumLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetNumLabel.setText("Street Number");

        streetNumText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNumTextActionPerformed(evt);
            }
        });

        streetLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetLabel.setText("Street");

        streetText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetTextActionPerformed(evt);
            }
        });

        suburbLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        suburbLabel.setText("Suburb");

        suburbText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityLabel.setText("City");

        cityCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboActionPerformed(evt);
            }
        });

        cityChoice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityChoice.setText("New City");
        cityChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityChoiceActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 51, 102));
        saveButton.setText("SAVE");
        saveButton.setAlignmentY(0.0F);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cityText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        clientText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientText.setText("Select User ID");

        clientCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientComboActionPerformed(evt);
            }
        });
        clientCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clientComboPropertyChange(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 51, 102));
        jButton1.setText("DELETE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addressLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addressLabel1.setText("Client Details");

        javax.swing.GroupLayout EditPersonalDataLayout = new javax.swing.GroupLayout(EditPersonalData);
        EditPersonalData.setLayout(EditPersonalDataLayout);
        EditPersonalDataLayout.setHorizontalGroup(
            EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                .addGap(237, 237, 237)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                .addComponent(cityLabel)
                                .addGap(272, 272, 272)
                                .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(cityChoice))
                    .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressLabel)
                            .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                    .addComponent(suburbLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                    .addComponent(streetLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                    .addComponent(streetNumLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(streetNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditPersonalDataLayout.createSequentialGroup()
                                    .addComponent(clientText)
                                    .addGap(32, 32, 32)
                                    .addComponent(clientCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(EditPersonalDataLayout.createSequentialGroup()
                                    .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(passwordLabel)
                                        .addComponent(nameLabel)
                                        .addComponent(idLabel)
                                        .addComponent(usernameLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(idText)
                                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(addressLabel1))))
                .addContainerGap(717, Short.MAX_VALUE))
        );
        EditPersonalDataLayout.setVerticalGroup(
            EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientText)
                    .addComponent(clientCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(addressLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(addressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetNumLabel)
                    .addComponent(streetNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetLabel)
                    .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suburbLabel)
                    .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cityLabel))
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cityChoice))
                .addGap(48, 48, 48)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(jButton1))
                .addContainerGap(229, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit Client Data", EditPersonalData);

        thirdPartyRadio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        thirdPartyRadio.setText("Third Party");
        thirdPartyRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thirdPartyRadioStateChanged(evt);
            }
        });
        thirdPartyRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdPartyRadioActionPerformed(evt);
            }
        });

        comprehensiveRadio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comprehensiveRadio.setText("Comprehensive");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Policy Holder Name");

        policyHolderText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Policy ID Number");
        jLabel11.setToolTipText("");

        policyIdText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        vehicleDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        vehicleDetailsLabel.setText("Vehicle Details");

        carComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        carComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carComboBoxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Type");

        modelText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Model");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Build Year");

        buildYearText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Price");

        priceText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        expiryLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        expiryLabel.setText("Policy Expiry Date");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Year");
        jLabel18.setToolTipText("");

        expYearText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        expMonthText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Month");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Day");
        jLabel20.setToolTipText("");

        expDayText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        commentAgeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        commentAgeLabel.setText("Comments");
        commentAgeLabel.setToolTipText("");

        commentAgeText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        levelLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        levelLabel.setText("Cover Level");
        levelLabel.setToolTipText("");

        levelText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 51, 102));
        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 51, 102));
        addButton.setText("ADD POLICY");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Number of Claims");
        jLabel12.setToolTipText("");

        claimsText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        claimsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claimsTextActionPerformed(evt);
            }
        });

        clientLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientLabel.setText("Select User ID");

        clientCombo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCombo1ActionPerformed(evt);
            }
        });
        clientCombo1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clientCombo1PropertyChange(evt);
            }
        });

        usernameText1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usernameText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameText1ActionPerformed(evt);
            }
        });

        idLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idLabel1.setText("Username");

        nameLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel1.setText("Name");

        nameText1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameText1ActionPerformed(evt);
            }
        });

        vehicleDetailsLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        vehicleDetailsLabel1.setText("User Details");

        javax.swing.GroupLayout AddPolicyLayout = new javax.swing.GroupLayout(AddPolicy);
        AddPolicy.setLayout(AddPolicyLayout);
        AddPolicyLayout.setHorizontalGroup(
            AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPolicyLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vehicleDetailsLabel1)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11))
                            .addGap(18, 18, 18)
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(policyHolderText)
                                .addComponent(policyIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(28, 28, 28)
                            .addComponent(claimsText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddPolicyLayout.createSequentialGroup()
                                .addComponent(clientLabel)
                                .addGap(45, 45, 45)
                                .addComponent(clientCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(idLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(usernameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nameLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                                    .addComponent(addButton)
                                    .addGap(18, 18, 18))
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(vehicleDetailsLabel)
                                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(AddPolicyLayout.createSequentialGroup()
                                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel14)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel16))
                                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(AddPolicyLayout.createSequentialGroup()
                                                        .addGap(76, 76, 76)
                                                        .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(buildYearText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(priceText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGap(82, 82, 82)))
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(expiryLabel)
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addComponent(commentAgeLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(commentAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                                    .addComponent(levelLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(expYearText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(AddPolicyLayout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addGap(96, 96, 96)
                                        .addComponent(expMonthText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddPolicyLayout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addGap(110, 110, 110)
                                        .addComponent(expDayText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator7))
                            .addGap(107, 107, 107))
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addComponent(thirdPartyRadio)
                            .addGap(18, 18, 18)
                            .addComponent(comprehensiveRadio))))
                .addContainerGap(504, Short.MAX_VALUE))
        );
        AddPolicyLayout.setVerticalGroup(
            AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientLabel)
                    .addComponent(clientCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel1)
                    .addComponent(usernameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel1)
                    .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thirdPartyRadio)
                    .addComponent(comprehensiveRadio))
                .addGap(24, 24, 24)
                .addComponent(vehicleDetailsLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(policyHolderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(policyIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(13, 13, 13)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(claimsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleDetailsLabel)
                    .addComponent(expiryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddPolicyLayout.createSequentialGroup()
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddPolicyLayout.createSequentialGroup()
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(buildYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16)))
                            .addGroup(AddPolicyLayout.createSequentialGroup()
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(expYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(expMonthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(expDayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(commentAgeLabel)
                                    .addComponent(commentAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(levelLabel)
                                    .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(60, 60, 60)
                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(jButton2)))
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(205, 205, 205))
        );

        jTabbedPane1.addTab("Add Policy", AddPolicy);

        policyArea.setEditable(false);
        policyArea.setBackground(new java.awt.Color(239, 255, 255));
        policyArea.setColumns(20);
        policyArea.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        policyArea.setRows(5);
        policyArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 255, 255), new java.awt.Color(0, 102, 153), new java.awt.Color(0, 204, 204)));
        jScrollPane1.setViewportView(policyArea);

        findButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        findButton1.setForeground(new java.awt.Color(255, 51, 102));
        findButton1.setText("CLEAR");
        findButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButton1ActionPerformed(evt);
            }
        });

        clientLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientLabel1.setText("Select User ID");

        policyCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        policyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        policyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                policyComboActionPerformed(evt);
            }
        });
        policyCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                policyComboPropertyChange(evt);
            }
        });

        clientCombo2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCombo2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Policy ID");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel24.setText("Select User ID followed by Policy ID to find a policy");

        javax.swing.GroupLayout FindPolicyLayout = new javax.swing.GroupLayout(FindPolicy);
        FindPolicy.setLayout(FindPolicyLayout);
        FindPolicyLayout.setHorizontalGroup(
            FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1271, Short.MAX_VALUE)
                    .addGroup(FindPolicyLayout.createSequentialGroup()
                        .addGroup(FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(FindPolicyLayout.createSequentialGroup()
                                .addComponent(clientLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(clientCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(policyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(findButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel24)
                            .addComponent(jSeparator14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FindPolicyLayout.setVerticalGroup(
            FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clientLabel1)
                        .addComponent(policyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clientCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(findButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find a Policy", FindPolicy);

        policyTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        policyTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        policyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"
            }
        ));
        policyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                policyTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(policyTable);

        delBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delBut.setForeground(new java.awt.Color(255, 51, 102));
        delBut.setText("DELETE");
        delBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButActionPerformed(evt);
            }
        });

        updateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBut.setForeground(new java.awt.Color(255, 51, 102));
        updateBut.setText("UPDATE");
        updateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButActionPerformed(evt);
            }
        });

        clientCombo3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientCombo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCombo3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Select a user ID to populate the table");

        javax.swing.GroupLayout PolicyInfoLayout = new javax.swing.GroupLayout(PolicyInfo);
        PolicyInfo.setLayout(PolicyInfoLayout);
        PolicyInfoLayout.setHorizontalGroup(
            PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1271, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PolicyInfoLayout.createSequentialGroup()
                        .addComponent(delBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(updateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PolicyInfoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(clientCombo3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PolicyInfoLayout.setVerticalGroup(
            PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(clientCombo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delBut)
                    .addComponent(updateBut))
                .addContainerGap(293, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Policy Information", PolicyInfo);

        policyTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        policyTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        policyTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"
            }
        ));
        jScrollPane3.setViewportView(policyTable1);

        modelFilterText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFilterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                modelFilterTextKeyReleased(evt);
            }
        });

        modelFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFilterLabel.setText("Car Model");

        dateFilterText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dateFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateFilterLabel.setText("Expiry Date");

        byDateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        byDateBut.setForeground(new java.awt.Color(255, 51, 102));
        byDateBut.setText("Filter By Date");
        byDateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byDateButActionPerformed(evt);
            }
        });

        sortCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sortCheck.setText("Sort by Policy Holder Name");
        sortCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortCheckActionPerformed(evt);
            }
        });

        clientCombo4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientCombo4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCombo4ActionPerformed(evt);
            }
        });

        clientLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        clientLabel4.setText("Select 'View All' to see all policies, or a User ID for policies by user");

        clientLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        clientLabel5.setText("Filter Policies");

        javax.swing.GroupLayout FilterPoliciesLayout = new javax.swing.GroupLayout(FilterPolicies);
        FilterPolicies.setLayout(FilterPoliciesLayout);
        FilterPoliciesLayout.setHorizontalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1271, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clientLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator8)
                        .addGroup(FilterPoliciesLayout.createSequentialGroup()
                            .addComponent(clientLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(clientCombo4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(modelFilterLabel)
                        .addComponent(dateFilterLabel)
                        .addGroup(FilterPoliciesLayout.createSequentialGroup()
                            .addGap(103, 103, 103)
                            .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(FilterPoliciesLayout.createSequentialGroup()
                                    .addComponent(modelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sortCheck))
                                .addGroup(FilterPoliciesLayout.createSequentialGroup()
                                    .addComponent(dateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(byDateBut)
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FilterPoliciesLayout.setVerticalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientLabel4)
                    .addComponent(clientCombo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addComponent(clientLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelFilterLabel))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterPoliciesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byDateBut)
                    .addComponent(dateFilterLabel))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Filter Policies", FilterPolicies);

        jMenuBar1.setToolTipText("Tim Glasgow 7409072");
        jMenuBar1.setName("Tim Glasgow 7409072"); // NOI18N

        logoutMenu.setText("Logout");
        logoutMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        logoutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onLogin() // load some inital settings on login
    {
        thirdPartyRadio.setSelected(true);
        levelLabel.setVisible(false);
        levelText.setVisible(false);
        commentAgeLabel.setText("Comments");
        
        ButtonGroup plans = new ButtonGroup();
        plans.add(thirdPartyRadio);
        plans.add(comprehensiveRadio);
        
        ButtonGroup clientSort = new ButtonGroup();
        clientSort.add(clientNameCheck);
        clientSort.add(premiumCheck);
    }
    
    private void clearUser()
    {
        idText.setText(""); // implicit conversion by concat empty string
        nameText.setText("");
        usernameText.setText("");
        passwordText.setText("");
        streetNumText.setText("");
        streetText.setText("");
        suburbText.setText("");
        cityText.setText("");
    }
    
    private void setUser(User user)
    {
        this.user = user;
    }
    private void setUserlist(ArrayList<String> userList)
    {
        this.userList = userList;
    }
    
    private void clearPolicyForm() // method to clear entered policy details from Add Policy form
    {
        policyHolderText.setText("");
        policyIdText.setText("");
        modelText.setText("");
        buildYearText.setText("");
        priceText.setText("");
        claimsText.setText("");
        expYearText.setText("");
        expMonthText.setText("");
        expDayText.setText("");
        commentAgeText.setText("");
        levelText.setText("");
    }
    
    private void updateUserList()
    {
        setUserlist(company.getUsers().values().stream()
                .map(x -> x.getUserID()+"")
                .collect(Collectors.toCollection(ArrayList::new)));
        
    }
    
     public void fillTable()
    {
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        policyTable.setModel(model);
        for (InsurancePolicy policy : user.getPolicies(user.getUsername(), user.getPassword()).values())
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComments();
            }
            row[11] = String.format("$%.2f", policy.calcPayment(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
    }
     
    private void fillTable1()
    {
        ArrayList<InsurancePolicy> policiesCopy = new ArrayList<>();
        
        if(user==null)
        {
            policiesCopy = InsurancePolicy.shallowCopy(login.insuranceCompany.allPolicies(login.insuranceCompany.adminUsername, login.insuranceCompany.getAdminPassword()));
        }
        else
        {
            policiesCopy = user.shallowCopyPolicies();
        }
        try
        {
            if (!modelFilterText.getText().isEmpty())
            {
                policiesCopy = InsurancePolicy.filterByCarModel(policiesCopy, modelFilterText.getText());
            }
            if (!dateFilterText.getText().isEmpty())
            {
                String [] fields = dateFilterText.getText().split("/");
                int year = Integer.parseInt(fields[0]);
                int month = Integer.parseInt(fields[1]);
                int day = Integer.parseInt(fields[2]);
                MyDate date = new MyDate(year, month, day);
                policiesCopy = InsurancePolicy.filterByExpiryDate(policiesCopy, date);
            }
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input!\nCheck inputs fields.");
            if (!dateFilterText.getText().isEmpty())
            {
                dateFilterText.setText("");
            }
        }
        
        if (sortCheck.isSelected()) // check if sort by name
        {
            Collections.sort(policiesCopy);
        }
        // fill the table with results from above filters (if any)
        
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        policyTable1.setModel(model);
        for (InsurancePolicy policy : policiesCopy)
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComments();
            }
            row[11] = String.format("$%.2f", policy.calcPayment(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
        
    }
    
    private void fillClientTable()
    {   
        
        ArrayList<User> usersCopy = company.shallowCopyUsers().values().stream()
                .collect(Collectors.toCollection(ArrayList::new));
        
        if (clientNameCheck.isSelected()) // check if sort by name
        {
            Collections.sort(usersCopy);
        }
        
        if (premiumCheck.isSelected()) // check if sort by premium
        {
            Collections.sort(usersCopy, new InsuranceCompany.UserPremiumComparator()); // use comparator class from class Insurance Company
        }
        // fill the table with results from above filters (if any)
        
        String [] header = {"User ID", "Client Name", "Address", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        clientTable.setModel(model);
        for (User user : usersCopy)
        {
            String[] row = new String[4];
            row[0] = user.getUserID()+"";
            row[1] = user.getName();
            row[2] = user.getAddress().toString();

            row[3] = String.format("$%.2f", user.calcTotalPremiums(user.getUsername(), user.getPassword(), login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
        
    }
    
    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        // TODO add your handling code here:
        login.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_logoutMenuMouseClicked

    private void logoutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutMenuActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        int index = policyTable.getSelectedRow();
        if (index>=0)
        {

            user.getPolicies(user.getUsername(), user.getPassword()).remove(Integer.parseInt(policyTable.getValueAt(index, 0).toString()));
            fillTable();
        }

    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

        int index = policyTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUIAdmin updateUI_1 = new UpdateUIAdmin(user.getPolicies(user.getUsername(), user.getPassword()).get(Integer.parseInt(policyTable.getValueAt(index, 0).toString())), this);
            updateUI_1.setVisible(true);
        }

    }//GEN-LAST:event_UpdateActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:

        clearPolicyForm();
        clearUser();
        updateUserList();
        setUser(null);
        fillTable1();
        fillClientTable();

        adminUserText.setEnabled(false);
        adminUserText.setText(company.getAdminUsername());
        adminPassText.setText(company.getAdminPassword());

        clientCombo.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));
        clientCombo.addItem("New Client");

        cityCombo.setModel(new DefaultComboBoxModel<>(cities.toArray(new String[0])));

        // add policy tab
        clientCombo1.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // find policy tab
        clientCombo2.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // policy info tab
        clientCombo3.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // policy filter tab
        clientCombo4.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));
        clientCombo4.addItem("View All");

        policyCombo.setModel(new DefaultComboBoxModel<>());
        policyCombo.addItem("Select User ID");

        carComboBox.setModel(new DefaultComboBoxModel<>(CarType.values()));

        // set below variables to disabled on edit client tab
        idText.setEnabled(false);
        usernameText.setEnabled(false);
        cityText.setEnabled(false);

        // set below variable to disabled on add policy tab
        usernameText1.setEnabled(false);
        nameText1.setEnabled(false);

        policyTable.setComponentPopupMenu(tablePopMenu); // sets the popup to only display over the table it is set to
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void clientCombo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCombo4ActionPerformed
        // TODO add your handling code here:

        if(((String)clientCombo4.getSelectedItem()).equals("View All"))
        {
            setUser(null);
        }
        else
        {
            user = company.getUsers().get(Integer.parseInt((String)clientCombo4.getSelectedItem()));
        }
        fillTable1();

    }//GEN-LAST:event_clientCombo4ActionPerformed

    private void sortCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortCheckActionPerformed

        fillTable1();
    }//GEN-LAST:event_sortCheckActionPerformed

    private void byDateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byDateButActionPerformed

        fillTable1();
    }//GEN-LAST:event_byDateButActionPerformed

    private void modelFilterTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelFilterTextKeyReleased

        fillTable1();
    }//GEN-LAST:event_modelFilterTextKeyReleased

    private void clientCombo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCombo3ActionPerformed
        // TODO add your handling code here:

        user = company.getUsers().get(Integer.parseInt((String)clientCombo3.getSelectedItem()));

        fillTable();

    }//GEN-LAST:event_clientCombo3ActionPerformed

    private void updateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButActionPerformed

        int index = policyTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUIAdmin updateUI_1 = new UpdateUIAdmin(user.getPolicies(user.getUsername(), user.getPassword()).get(Integer.parseInt(policyTable.getValueAt(index, 0).toString())), this);
            updateUI_1.setVisible(true);
        }
    }//GEN-LAST:event_updateButActionPerformed

    private void delButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButActionPerformed

        int index = policyTable.getSelectedRow();
        if (index>=0)
        {

            user.getPolicies(user.getUsername(), user.getPassword()).remove(Integer.parseInt(policyTable.getValueAt(index, 0).toString()));
            fillTable();
        }
    }//GEN-LAST:event_delButActionPerformed

    private void policyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_policyTableMouseClicked

        if (evt.isPopupTrigger()) // pop up menu on right click
        {
            tablePopMenu.show(this, getX(), getY());
        }
    }//GEN-LAST:event_policyTableMouseClicked

    private void clientCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCombo2ActionPerformed
        // TODO add your handling code here:

        user = company.getUsers().get(Integer.parseInt((String)clientCombo2.getSelectedItem())); // update user variable to perform actions on user

        //populate policy combo based on user selection
        ArrayList<String> policyIdList = user.getPolicies(user.getUsername(), user.getPassword()).values().stream()
        .map(x -> x.getId()+"")
        .collect(Collectors.toCollection(ArrayList::new));

        policyCombo.setModel(new DefaultComboBoxModel<>(policyIdList.toArray(new String[0])));

    }//GEN-LAST:event_clientCombo2ActionPerformed

    private void policyComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_policyComboPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_policyComboPropertyChange

    private void policyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_policyComboActionPerformed
        // TODO add your handling code here:

        if (user!=null)
        {
            InsurancePolicy policy = company.findPolicy(company.adminUsername, company.getAdminPassword(), user.getUserID(), Integer.parseInt((String) policyCombo.getSelectedItem()));
            policyArea.append(policy.toString()+"\n");
        }

    }//GEN-LAST:event_policyComboActionPerformed

    private void findButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButton1ActionPerformed
        // TODO add your handling code here:
        policyArea.setText("");
        setUser(null);
        policyCombo.setModel(new DefaultComboBoxModel<>());
        policyCombo.addItem("Select User ID");

    }//GEN-LAST:event_findButton1ActionPerformed

    private void nameText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameText1ActionPerformed

    private void usernameText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameText1ActionPerformed

    private void clientCombo1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clientCombo1PropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_clientCombo1PropertyChange

    private void clientCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCombo1ActionPerformed
        // TODO add your handling code here:

        user = company.getUsers().get(Integer.parseInt((String)clientCombo1.getSelectedItem())); // update user variable to perform actions on user
        usernameText1.setText(user.getUsername());
        nameText1.setText(user.getName());

    }//GEN-LAST:event_clientCombo1ActionPerformed

    private void claimsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claimsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_claimsTextActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        InsurancePolicy policy = null;

        if(user == null)
        {
            JOptionPane.showMessageDialog(this, "Please select a user ID.");
        }
        else
        {
            try
            {
                String holder = policyHolderText.getText();
                int id = Integer.parseInt(policyIdText.getText());
                CarType type = (CarType) carComboBox.getSelectedItem();
                String model = modelText.getText();
                int carYear = Integer.parseInt(buildYearText.getText());
                int price = Integer.parseInt(priceText.getText());
                int claimsNo = Integer.parseInt(claimsText.getText());
                int year = Integer.parseInt(expYearText.getText());
                int month = Integer.parseInt(expMonthText.getText());
                int day = Integer.parseInt(expDayText.getText());
                MyDate date = new MyDate(year, month, day);
                Car car = new Car(type, model, carYear, price);
                if (thirdPartyRadio.isSelected())
                {
                    String comments = commentAgeText.getText();
                    policy = new ThirdPartyPolicy(holder, id, car, claimsNo, date, comments);
                }
                else
                {
                    int age = Integer.parseInt(commentAgeText.getText());
                    int level = Integer.parseInt(levelText.getText());
                    policy = new ComprehensivePolicy(holder, id, car, claimsNo, date, age, level);
                }
                if (user.addPolicy(user.getUsername(), user.getPassword(), policy))
                {
                    JOptionPane.showMessageDialog(this, "Policy has been added successfully.");
                    clearPolicyForm();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Policy can not be added to user.");
                }
            }
            catch(NameException e)
            {
                JOptionPane.showMessageDialog(this, "Policy Holder Names must contain minimum three chracters in the format example of 'Bob Bob'.");
            }
            catch(PolicyException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Policy ID format!\n\nAdmin has generated and assigned a policy ID.");
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Input! Please check fields that require numeric inputs.");
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        clearPolicyForm();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void carComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carComboBoxActionPerformed

    private void thirdPartyRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdPartyRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdPartyRadioActionPerformed

    private void thirdPartyRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thirdPartyRadioStateChanged

        if (thirdPartyRadio.isSelected())
        {
            levelLabel.setVisible(false);
            levelText.setVisible(false);
            commentAgeLabel.setText("Comments");
            commentAgeText.setText("");
        }
        else
        {
            commentAgeLabel.setText("Driver Age");
            levelLabel.setVisible(true);
            levelText.setVisible(true);
            commentAgeText.setText("");
            levelText.setText("");
        }
    }//GEN-LAST:event_thirdPartyRadioStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        company.removeUser(company.adminUsername, company.getAdminPassword(), user.getUserID());
        JOptionPane.showMessageDialog(this, "Client Removed Successfully.");

        updateUserList();
        clientCombo.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

    }//GEN-LAST:event_jButton1ActionPerformed

    private void clientComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clientComboPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_clientComboPropertyChange

    private void clientComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientComboActionPerformed
        // TODO add your handling code here:

        if(((String)clientCombo.getSelectedItem()).equals("New Client"))
        {
            clearUser();
            idText.setEnabled(false);
            usernameText.setEnabled(true);
        }
        else
        {
            idText.setEnabled(false);
            usernameText.setEnabled(false);

            user = company.getUsers().get(Integer.parseInt((String)clientCombo.getSelectedItem()));
            idText.setText(user.getUserID()+""); // implicit conversion by concat empty string
            nameText.setText(user.getName());
            usernameText.setText(user.getUsername());
            passwordText.setText(user.getPassword());
            streetNumText.setText(user.getAddress().getStreetNum()+"");
            streetText.setText(user.getAddress().getStreet());
            suburbText.setText(user.getAddress().getSuburb());

            cityCombo.setSelectedItem(user.getAddress().getCity());
            cityText.setText(user.getAddress().getCity());
        }

    }//GEN-LAST:event_clientComboActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        if(!((String)clientCombo.getSelectedItem()).equals("New Client"))
        {
            try
            {
                user.setName(nameText.getText());
                user.setPassword(passwordText.getText());
                user.getAddress().setStreetNum(Integer.parseInt(streetNumText.getText()));
                user.getAddress().setStreet(streetText.getText());
                user.getAddress().setSuburb(suburbText.getText());
                if (cityChoice.isSelected())
                {
                    user.getAddress().setCity(cityText.getText());
                    if (!cities.contains(cityText.getText())) // eliminate dupicates
                    {
                        cities.add(cityText.getText());
                        cityCombo.setModel(new DefaultComboBoxModel<>(cities.toArray(new String[0])));
                        cityCombo.setSelectedItem(cityText.getText());
                    }
                }
                else
                {
                    user.getAddress().setCity((String)cityCombo.getSelectedItem());
                    cityText.setText(user.getAddress().getCity());
                }
                JOptionPane.showMessageDialog(this, "User Details Updated.");
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Input! Street number must be a number.");
            }
        }
        else
        {
            try
            {
                String name = nameText.getText();
                String username = usernameText.getText();
                String password = passwordText.getText();
                int streetNum = Integer.parseInt(streetNumText.getText());
                String street = streetText.getText();
                String suburb = suburbText.getText();
                String city;
                if(cityChoice.isSelected())
                {
                    city = cityText.getText();
                }
                else
                {
                    city = (String)cityCombo.getSelectedItem();
                }
                // create user and add to company
                Address newAddress = new Address (streetNum, street, suburb, city);
                User newUser = new User(name, newAddress, username, password);
                company.addUser(company.adminUsername, company.getAdminPassword(), newUser);
                JOptionPane.showMessageDialog(this, "User Added Successfully.");
            }
            catch(NumberFormatException e)
            {
                System.out.println("Invalid Input!\nCheck inputs fields.");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cityChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityChoiceActionPerformed

        if (cityChoice.isSelected())
        {
            cityText.setEnabled(true);
            cityCombo.setEnabled(false);
        }
        else
        {
            cityText.setEnabled(false);
            cityCombo.setEnabled(true);
        }
    }//GEN-LAST:event_cityChoiceActionPerformed

    private void cityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityComboActionPerformed

    private void streetTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetTextActionPerformed

    private void streetNumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNumTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNumTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void clientLoadButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientLoadButActionPerformed
        // TODO add your handling code here:
        try
        {
            company.loadUsersFromText(company.adminUsername, company.getAdminPassword());
            updateUserList();
            JOptionPane.showMessageDialog(this, "Users Imported Successfully.");
        }
        catch(NameException | PolicyException | IOException e)
        {
            JOptionPane.showMessageDialog(this, "Error Importing Users!\nOperation Failed.");
        }

    }//GEN-LAST:event_clientLoadButActionPerformed

    private void clientSaveButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientSaveButActionPerformed
        // TODO add your handling code here:
        try
        {
            company.saveUserTextFile(company.adminUsername, company.getAdminPassword());
            JOptionPane.showMessageDialog(this, "Users Exported Successfully.");
        }
        catch(HeadlessException | IOException e)
        {
            JOptionPane.showMessageDialog(this, "Error Exporting Users!\nOperation Failed.");
        }

    }//GEN-LAST:event_clientSaveButActionPerformed

    private void premiumCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_premiumCheckActionPerformed
        // TODO add your handling code here:

        fillClientTable();

    }//GEN-LAST:event_premiumCheckActionPerformed

    private void clientNameCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNameCheckActionPerformed
        // TODO add your handling code here:

        fillClientTable();

    }//GEN-LAST:event_clientNameCheckActionPerformed

    private void rateUpdateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateUpdateButActionPerformed
        // TODO add your handling code here:
        
        try
        {
            company.setFlatRate(Integer.parseInt((String) flatRateText.getText()));
            JOptionPane.showMessageDialog(this, "Flat Rate Updated Successfully.");
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Please enter a numeric value in whole dollars only.");
        }
        
    }//GEN-LAST:event_rateUpdateButActionPerformed

    private void reportClearButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportClearButActionPerformed
        // TODO add your handling code here:

        reportArea.setText("");

    }//GEN-LAST:event_reportClearButActionPerformed

    private void byCityBut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byCityBut1ActionPerformed
        // TODO add your handling code here:

        reportArea.append(company.reportPaymentsPerCarModel(company.adminUsername, company.getAdminPassword()));

    }//GEN-LAST:event_byCityBut1ActionPerformed

    private void byCityButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byCityButActionPerformed
        // TODO add your handling code here:

        reportArea.append(company.reportTotalPremiumPerCity(company.adminUsername, company.getAdminPassword()));

    }//GEN-LAST:event_byCityButActionPerformed

    private void adminUserTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminUserTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminUserTextActionPerformed

    private void passUpdateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passUpdateButActionPerformed
        // TODO add your handling code here:
        
        if(!adminPassText.getText().equals(""))
        {
            company.setAdminPassword(company.getAdminUsername(), company.getAdminPassword(), adminPassText.getText());
            JOptionPane.showMessageDialog(this, "Password Updated Successfully.");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please enter a valid password.");
        }
        
    }//GEN-LAST:event_passUpdateButActionPerformed

    private void flatRateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatRateTextActionPerformed
        // TODO add your handling code here:   
    }//GEN-LAST:event_flatRateTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new AdminUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddPolicy;
    private javax.swing.JPanel ClientInformation;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JPanel EditPersonalData;
    private javax.swing.JPanel FilterPolicies;
    private javax.swing.JPanel FindPolicy;
    private javax.swing.JPanel PolicyInfo;
    private javax.swing.JMenuItem Update;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JTextField adminPassText;
    private javax.swing.JTextField adminUserText;
    private javax.swing.JTextField buildYearText;
    private javax.swing.JButton byCityBut;
    private javax.swing.JButton byCityBut1;
    private javax.swing.JButton byDateBut;
    private javax.swing.JComboBox<CarType> carComboBox;
    private javax.swing.JCheckBox cityChoice;
    private javax.swing.JComboBox<String> cityCombo;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityText;
    private javax.swing.JTextField claimsText;
    private javax.swing.JComboBox<String> clientCombo;
    private javax.swing.JComboBox<String> clientCombo1;
    private javax.swing.JComboBox<String> clientCombo2;
    private javax.swing.JComboBox<String> clientCombo3;
    private javax.swing.JComboBox<String> clientCombo4;
    private javax.swing.JLabel clientLabel;
    private javax.swing.JLabel clientLabel1;
    private javax.swing.JLabel clientLabel4;
    private javax.swing.JLabel clientLabel5;
    private javax.swing.JButton clientLoadBut;
    private javax.swing.JCheckBox clientNameCheck;
    private javax.swing.JButton clientSaveBut;
    private javax.swing.JTable clientTable;
    private javax.swing.JLabel clientText;
    private javax.swing.JLabel commentAgeLabel;
    private javax.swing.JTextField commentAgeText;
    private javax.swing.JRadioButton comprehensiveRadio;
    private javax.swing.JLabel dateFilterLabel;
    private javax.swing.JTextField dateFilterText;
    private javax.swing.JButton delBut;
    private javax.swing.JTextField expDayText;
    private javax.swing.JTextField expMonthText;
    private javax.swing.JTextField expYearText;
    private javax.swing.JLabel expiryLabel;
    private javax.swing.JButton findButton1;
    private javax.swing.JTextField flatRateText;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelText;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JLabel modelFilterLabel;
    private javax.swing.JTextField modelFilterText;
    private javax.swing.JTextField modelText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField nameText1;
    private javax.swing.JButton passUpdateBut;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextArea policyArea;
    private javax.swing.JComboBox<String> policyCombo;
    private javax.swing.JTextField policyHolderText;
    private javax.swing.JTextField policyIdText;
    private javax.swing.JTable policyTable;
    private javax.swing.JTable policyTable1;
    private javax.swing.JCheckBox premiumCheck;
    private javax.swing.JTextField priceText;
    private javax.swing.JButton rateUpdateBut;
    private javax.swing.JTextArea reportArea;
    private javax.swing.JLabel reportByCityLabel;
    private javax.swing.JLabel reportByCityLabel1;
    private javax.swing.JButton reportClearBut;
    private javax.swing.JLabel reportLabel;
    private javax.swing.JLabel reportLabel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox sortCheck;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JLabel streetNumLabel;
    private javax.swing.JTextField streetNumText;
    private javax.swing.JTextField streetText;
    private javax.swing.JLabel suburbLabel;
    private javax.swing.JTextField suburbText;
    private javax.swing.JPopupMenu tablePopMenu;
    private javax.swing.JRadioButton thirdPartyRadio;
    private javax.swing.JButton updateBut;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameText;
    private javax.swing.JTextField usernameText1;
    private javax.swing.JLabel vehicleDetailsLabel;
    private javax.swing.JLabel vehicleDetailsLabel1;
    // End of variables declaration//GEN-END:variables
}
