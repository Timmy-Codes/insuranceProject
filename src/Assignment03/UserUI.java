package Assignment03;

import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class UserUI extends javax.swing.JFrame {

    ArrayList<String> cities;
    User user;
    UserLogin login;
    
    /**
     * Creates new form UserUI
     * @param user
     * @param login
     * @param cities
     */
    public UserUI(User user, UserLogin login, ArrayList<String> cities)
    {
        this.user = user;
        this.login = login;
        this.cities = cities;
        initComponents();
        onLogin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePopMenu = new javax.swing.JPopupMenu();
        Delete = new javax.swing.JMenuItem();
        Update = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        EditPersonalData = new javax.swing.JPanel();
        idText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        streetNumText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        streetText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        suburbText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cityCombo = new javax.swing.JComboBox<>();
        cityChoice = new javax.swing.JCheckBox();
        saveButton = new javax.swing.JButton();
        cityText = new javax.swing.JTextField();
        AddPolicy = new javax.swing.JPanel();
        thirdPartyRadio = new javax.swing.JRadioButton();
        comprehensiveRadio = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        policyHolderText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        policyIdText = new javax.swing.JTextField();
        vehicleDetailsLabel = new javax.swing.JLabel();
        carComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        modelText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buildYearText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        expiryLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        expYearText = new javax.swing.JTextField();
        expMonthText = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        expDayText = new javax.swing.JTextField();
        commentAgeLabel = new javax.swing.JLabel();
        commentAgeText = new javax.swing.JTextField();
        levelLabel = new javax.swing.JLabel();
        levelText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        claimsText = new javax.swing.JTextField();
        FindPolicy = new javax.swing.JPanel();
        policyFindText = new javax.swing.JTextField();
        findPolicyLabel = new javax.swing.JLabel();
        findButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        policyArea = new javax.swing.JTextArea();
        findButton1 = new javax.swing.JButton();
        PolicyInfo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        policyTable = new javax.swing.JTable();
        delBut = new javax.swing.JButton();
        updateBut = new javax.swing.JButton();
        FilterPolicies = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        policyTable1 = new javax.swing.JTable();
        modelFilterText = new javax.swing.JTextField();
        modelFilterLabel = new javax.swing.JLabel();
        dateFilterText = new javax.swing.JTextField();
        dateFilterLabel = new javax.swing.JLabel();
        byDateBut = new javax.swing.JButton();
        sortCheck = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        logoutMenu = new javax.swing.JMenu();

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        tablePopMenu.add(Delete);

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        tablePopMenu.add(Update);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setForeground(new java.awt.Color(255, 51, 102));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        idText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("User ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        nameText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Username");

        usernameText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Password");

        passwordText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Address Information:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Street Number");

        streetNumText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNumTextActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Street");

        streetText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetTextActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Suburb");

        suburbText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("City");

        cityCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboActionPerformed(evt);
            }
        });

        cityChoice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityChoice.setText("New City");
        cityChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityChoiceActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 51, 102));
        saveButton.setText("SAVE");
        saveButton.setAlignmentY(0.0F);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cityText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout EditPersonalDataLayout = new javax.swing.GroupLayout(EditPersonalData);
        EditPersonalData.setLayout(EditPersonalDataLayout);
        EditPersonalDataLayout.setHorizontalGroup(
            EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(84, 84, 84)
                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(58, 58, 58)
                .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addGap(61, 61, 61)
                .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel5))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addComponent(streetNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addGap(82, 82, 82)
                .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addGap(74, 74, 74)
                .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(95, 95, 95)
                .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cityChoice))
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        EditPersonalDataLayout.setVerticalGroup(
            EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditPersonalDataLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(streetNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel8))
                    .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9))
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditPersonalDataLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cityChoice))
                .addGap(62, 62, 62)
                .addComponent(saveButton))
        );

        jTabbedPane1.addTab("Edit Personal Data", EditPersonalData);

        thirdPartyRadio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        thirdPartyRadio.setText("Third Party");
        thirdPartyRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thirdPartyRadioStateChanged(evt);
            }
        });
        thirdPartyRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdPartyRadioActionPerformed(evt);
            }
        });

        comprehensiveRadio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comprehensiveRadio.setText("Comprehensive");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Policy Holder Name");

        policyHolderText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Policy ID Number");
        jLabel11.setToolTipText("");

        policyIdText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        vehicleDetailsLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vehicleDetailsLabel.setText("Vehicle Details:");

        carComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        carComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carComboBoxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Type");

        modelText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Model");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Build Year");

        buildYearText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Price");

        priceText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        expiryLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        expiryLabel.setText("Expiry Date:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Year");
        jLabel18.setToolTipText("");

        expYearText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        expMonthText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Month");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Day");
        jLabel20.setToolTipText("");

        expDayText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        commentAgeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        commentAgeLabel.setText("Comments");
        commentAgeLabel.setToolTipText("");

        commentAgeText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        levelLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        levelLabel.setText("Cover Level");
        levelLabel.setToolTipText("");

        levelText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 51, 102));
        jButton1.setText("CLEAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 51, 102));
        addButton.setText("ADD POLICY");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Number of Claims");
        jLabel12.setToolTipText("");

        claimsText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        claimsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claimsTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddPolicyLayout = new javax.swing.GroupLayout(AddPolicy);
        AddPolicy.setLayout(AddPolicyLayout);
        AddPolicyLayout.setHorizontalGroup(
            AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPolicyLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addButton)
                    .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11))
                            .addGap(18, 18, 18)
                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(policyHolderText, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(policyIdText))
                            .addGap(79, 79, 79)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addComponent(thirdPartyRadio)
                            .addGap(18, 18, 18)
                            .addComponent(comprehensiveRadio))
                        .addGroup(AddPolicyLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(28, 28, 28)
                            .addComponent(claimsText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(expiryLabel)
                        .addComponent(vehicleDetailsLabel)
                        .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddPolicyLayout.createSequentialGroup()
                                .addComponent(commentAgeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(commentAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddPolicyLayout.createSequentialGroup()
                                .addComponent(levelLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddPolicyLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(expYearText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(96, 96, 96)
                                    .addComponent(expMonthText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addGap(110, 110, 110)
                                    .addComponent(expDayText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(AddPolicyLayout.createSequentialGroup()
                                    .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel16))
                                    .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(AddPolicyLayout.createSequentialGroup()
                                            .addGap(76, 76, 76)
                                            .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(buildYearText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(priceText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                .addContainerGap(793, Short.MAX_VALUE))
        );
        AddPolicyLayout.setVerticalGroup(
            AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thirdPartyRadio)
                    .addComponent(comprehensiveRadio))
                .addGap(18, 18, 18)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(policyHolderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(policyIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(13, 13, 13)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(claimsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(vehicleDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buildYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(25, 25, 25)
                .addComponent(expiryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expMonthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expDayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentAgeLabel)
                    .addComponent(commentAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelLabel)
                    .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addGap(29, 29, 29))
        );

        jTabbedPane1.addTab("Add Policy", AddPolicy);

        policyFindText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        findPolicyLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        findPolicyLabel.setText("Policy ID");

        findButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        findButton.setForeground(new java.awt.Color(255, 51, 102));
        findButton.setText("FIND");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        policyArea.setEditable(false);
        policyArea.setBackground(new java.awt.Color(239, 255, 255));
        policyArea.setColumns(20);
        policyArea.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        policyArea.setRows(5);
        policyArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 255, 255), new java.awt.Color(0, 102, 153), new java.awt.Color(0, 204, 204)));
        jScrollPane1.setViewportView(policyArea);

        findButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        findButton1.setForeground(new java.awt.Color(255, 51, 102));
        findButton1.setText("CLEAR");
        findButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FindPolicyLayout = new javax.swing.GroupLayout(FindPolicy);
        FindPolicy.setLayout(FindPolicyLayout);
        FindPolicyLayout.setHorizontalGroup(
            FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(findPolicyLabel)
                .addGap(18, 18, 18)
                .addComponent(policyFindText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(findButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(857, Short.MAX_VALUE))
            .addGroup(FindPolicyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        FindPolicyLayout.setVerticalGroup(
            FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(FindPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(policyFindText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findPolicyLabel)
                    .addComponent(findButton)
                    .addComponent(findButton1))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find a Policy", FindPolicy);

        policyTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        policyTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        policyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        policyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                policyTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(policyTable);

        delBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delBut.setForeground(new java.awt.Color(255, 51, 102));
        delBut.setText("DELETE");
        delBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButActionPerformed(evt);
            }
        });

        updateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBut.setForeground(new java.awt.Color(255, 51, 102));
        updateBut.setText("UPDATE");
        updateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PolicyInfoLayout = new javax.swing.GroupLayout(PolicyInfo);
        PolicyInfo.setLayout(PolicyInfoLayout);
        PolicyInfoLayout.setHorizontalGroup(
            PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(delBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(updateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PolicyInfoLayout.setVerticalGroup(
            PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(PolicyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delBut)
                    .addComponent(updateBut))
                .addContainerGap(213, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Policy Information", PolicyInfo);

        policyTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        policyTable1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        policyTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(policyTable1);

        modelFilterText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFilterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                modelFilterTextKeyReleased(evt);
            }
        });

        modelFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFilterLabel.setText("Car Model");

        dateFilterText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dateFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateFilterLabel.setText("Expiry Date");

        byDateBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        byDateBut.setForeground(new java.awt.Color(255, 51, 102));
        byDateBut.setText("Filter By Date");
        byDateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byDateButActionPerformed(evt);
            }
        });

        sortCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sortCheck.setText("Sort by Policy Holder Name");
        sortCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilterPoliciesLayout = new javax.swing.GroupLayout(FilterPolicies);
        FilterPolicies.setLayout(FilterPoliciesLayout);
        FilterPoliciesLayout.setHorizontalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE))
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFilterLabel)
                            .addComponent(modelFilterLabel))
                        .addGap(18, 18, 18)
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                                .addComponent(dateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(byDateBut)
                                .addGap(105, 105, 105)
                                .addComponent(sortCheck)))))
                .addGap(10, 10, 10))
        );
        FilterPoliciesLayout.setVerticalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(dateFilterLabel))
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelFilterLabel))
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(byDateBut)))
                            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(sortCheck)))))
                .addGap(68, 68, 68))
        );

        jTabbedPane1.addTab("Filter Policies", FilterPolicies);

        jMenuBar1.setToolTipText("Tim Glasgow 7409072");
        jMenuBar1.setName("Tim Glasgow 7409072"); // NOI18N

        logoutMenu.setText("Logout");
        logoutMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        logoutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void onLogin() // load some inital settings on login
    {
        thirdPartyRadio.setSelected(true);
        levelLabel.setVisible(false);
        levelText.setVisible(false);
        commentAgeLabel.setText("Comments");
        
        ButtonGroup plans = new ButtonGroup();
        plans.add(thirdPartyRadio);
        plans.add(comprehensiveRadio);
    }
    
    private void clearPolicyForm() // method to clear entered policy details from Add Policy form
    {
        policyHolderText.setText("");
        policyIdText.setText("");
        modelText.setText("");
        buildYearText.setText("");
        priceText.setText("");
        claimsText.setText("");
        expYearText.setText("");
        expMonthText.setText("");
        expDayText.setText("");
        commentAgeText.setText("");
        levelText.setText("");
    }
    
    public void fillTable()
    {
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        policyTable.setModel(model);
        for (InsurancePolicy policy : user.getPolicies(user.getUsername(), user.getPassword()).values())
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComments();
            }
            row[11] = String.format("$%.2f", policy.calcPayment(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
    }
    
    private void fillTable1()
    {
        ArrayList<InsurancePolicy> policiesCopy = InsurancePolicy.shallowCopy(login.insuranceCompany.allPolicies(login.insuranceCompany.adminUsername, login.insuranceCompany.adminPassword));
        try
        {
            if (!modelFilterText.getText().isEmpty())
            {
                policiesCopy = InsurancePolicy.filterByCarModel(policiesCopy, modelFilterText.getText());
            }
            if (!dateFilterText.getText().isEmpty())
            {
                String [] fields = dateFilterText.getText().split("/");
                int year = Integer.parseInt(fields[0]);
                int month = Integer.parseInt(fields[1]);
                int day = Integer.parseInt(fields[2]);
                MyDate date = new MyDate(year, month, day);
                policiesCopy = InsurancePolicy.filterByExpiryDate(policiesCopy, date);
            }
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input!\nCheck inputs fields.");
            if (!dateFilterText.getText().isEmpty())
            {
                dateFilterText.setText("");
            }
        }
        
        if (sortCheck.isSelected()) // check if sort by name
        {
            Collections.sort(policiesCopy);
        }
        // fill the table with results from above filters (if any)
        
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        policyTable1.setModel(model);
        for (InsurancePolicy policy : policiesCopy)
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComments();
            }
            row[11] = String.format("$%.2f", policy.calcPayment(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
        
    }
    
    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        // TODO add your handling code here:
        login.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_logoutMenuMouseClicked

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
     
        idText.setText(user.getUserID()+""); // implicit conversion by concat empty string
        nameText.setText(user.getName());
        usernameText.setText(user.getUsername());
        passwordText.setText(user.getPassword());
        streetNumText.setText(user.getAddress().getStreetNum()+"");
        streetText.setText(user.getAddress().getStreet());
        suburbText.setText(user.getAddress().getSuburb());

        cityCombo.setModel(new DefaultComboBoxModel<>(cities.toArray(new String[0])));
        cityCombo.setSelectedItem(user.getAddress().getCity());
        cityText.setText(user.getAddress().getCity());

        idText.setEnabled(false);
        usernameText.setEnabled(false);
        cityText.setEnabled(false);
             
        carComboBox.setModel(new DefaultComboBoxModel<>(CarType.values()));
        
        // populate tables
        fillTable();
        fillTable1();
        
        policyTable.setComponentPopupMenu(tablePopMenu); // sets the popup to only display over the table it is set to
        
        // reset policy filters on panel change
        modelFilterText.setText("");
        dateFilterText.setText("");
        sortCheck.setSelected(false);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        clearPolicyForm();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void carComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carComboBoxActionPerformed

    private void thirdPartyRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdPartyRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdPartyRadioActionPerformed

    private void thirdPartyRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thirdPartyRadioStateChanged
        
        if (thirdPartyRadio.isSelected())
        {
            levelLabel.setVisible(false);
            levelText.setVisible(false);
            commentAgeLabel.setText("Comments");
            commentAgeText.setText("");
        }
        else
        {
            commentAgeLabel.setText("Driver Age");
            levelLabel.setVisible(true);
            levelText.setVisible(true);
            commentAgeText.setText("");
            levelText.setText("");
        }
    }//GEN-LAST:event_thirdPartyRadioStateChanged

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        InsurancePolicy policy = null;
        try
        {
            String holder = policyHolderText.getText();
            int id = Integer.parseInt(policyIdText.getText());
            CarType type = (CarType) carComboBox.getSelectedItem();
            String model = modelText.getText();
            int carYear = Integer.parseInt(buildYearText.getText());
            int price = Integer.parseInt(priceText.getText());
            int claimsNo = Integer.parseInt(claimsText.getText());
            int year = Integer.parseInt(expYearText.getText());
            int month = Integer.parseInt(expMonthText.getText());
            int day = Integer.parseInt(expDayText.getText());
            MyDate date = new MyDate(year, month, day);
            Car car = new Car(type, model, carYear, price);
            if (thirdPartyRadio.isSelected())
            {
                String comments = commentAgeText.getText();
                policy = new ThirdPartyPolicy(holder, id, car, claimsNo, date, comments);
            }
            else
            {
                int age = Integer.parseInt(commentAgeText.getText());
                int level = Integer.parseInt(levelText.getText());
                policy = new ComprehensivePolicy(holder, id, car, claimsNo, date, age, level);
            }
            if (user.addPolicy(user.getUsername(), user.getPassword(), policy))
            {
                JOptionPane.showMessageDialog(this, "Policy has been added successfully.");
                clearPolicyForm();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Policy can not be added to user.");
            }
        }
        catch(NameException e)
        {
            JOptionPane.showMessageDialog(this, "Policy Holder Names must contain minimum three chracters in the format example of 'Bob Bob'.");
        }
        catch(PolicyException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Policy ID format!\n\nAdmin has generated and assigned a policy ID.");
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input! Please check fields that require numeric inputs.");
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void claimsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claimsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_claimsTextActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            InsurancePolicy policy = user.findPolicy(user.getUsername(), user.getPassword(), Integer.parseInt(policyFindText.getText()));
            if (policy!=null)
            {
                policyArea.append(policy.toString()+"\n");
            }
            else
            {
                policyArea.append("Policy with ID number " + policyFindText.getText() + " not found.\n");
            }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input!\nPolicy ID must be a number.");
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void updateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButActionPerformed
        
        int index = policyTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUI updateUI = new UpdateUI(user.getPolicies(user.getUsername(), user.getPassword()).get(Integer.parseInt(policyTable.getValueAt(index, 0).toString())), this);
            updateUI.setVisible(true);
        }
        
    }//GEN-LAST:event_updateButActionPerformed

    private void delButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButActionPerformed
        
        int index = policyTable.getSelectedRow();
        if (index>=0)
        {
            
            user.getPolicies(user.getUsername(), user.getPassword()).remove(Integer.parseInt(policyTable.getValueAt(index, 0).toString()));
            fillTable();
        }
        
    }//GEN-LAST:event_delButActionPerformed

    private void policyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_policyTableMouseClicked
        
        if (evt.isPopupTrigger()) // pop up menu on right click
        {
            tablePopMenu.show(this, getX(), getY());
        }
        
    }//GEN-LAST:event_policyTableMouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        
        int index = policyTable.getSelectedRow();
        if (index>=0)
        {
            
            user.getPolicies(user.getUsername(), user.getPassword()).remove(Integer.parseInt(policyTable.getValueAt(index, 0).toString()));
            fillTable();
        }
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        
        int index = policyTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUI updateUI = new UpdateUI(user.getPolicies(user.getUsername(), user.getPassword()).get(Integer.parseInt(policyTable.getValueAt(index, 0).toString())), this);
            updateUI.setVisible(true);
        }
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void modelFilterTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelFilterTextKeyReleased
        
        fillTable1();
        
    }//GEN-LAST:event_modelFilterTextKeyReleased

    private void byDateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byDateButActionPerformed
        
        fillTable1();
        
    }//GEN-LAST:event_byDateButActionPerformed

    private void sortCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortCheckActionPerformed
        
        fillTable1();
        
    }//GEN-LAST:event_sortCheckActionPerformed

    private void findButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButton1ActionPerformed
        // TODO add your handling code here:
        policyArea.setText("");
        policyFindText.setText("");
    }//GEN-LAST:event_findButton1ActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        try
        {
            user.setName(nameText.getText());
            user.setPassword(passwordText.getText());
            user.getAddress().setStreetNum(Integer.parseInt(streetNumText.getText()));
            user.getAddress().setStreet(streetText.getText());
            user.getAddress().setSuburb(suburbText.getText());
            if (cityChoice.isSelected())
            {
                user.getAddress().setCity(cityText.getText());
                if (!cities.contains(cityText.getText())) // eliminate dupicates
                {
                    cities.add(cityText.getText());
                    cityCombo.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
                    cityCombo.setSelectedItem(cityText.getText());
                }
            }
            else
            {
                user.getAddress().setCity((String)cityCombo.getSelectedItem());
                cityText.setText(user.getAddress().getCity());
            }
            JOptionPane.showMessageDialog(this, "User Details Updated.");
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input! Street number must be a number.");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cityChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityChoiceActionPerformed

        if (cityChoice.isSelected())
        {
            cityText.setEnabled(true);
            cityCombo.setEnabled(false);
        }
        else
        {
            cityText.setEnabled(false);
            cityCombo.setEnabled(true);
        }
    }//GEN-LAST:event_cityChoiceActionPerformed

    private void streetTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetTextActionPerformed

    private void streetNumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNumTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNumTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void cityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityComboActionPerformed

    private void logoutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddPolicy;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JPanel EditPersonalData;
    private javax.swing.JPanel FilterPolicies;
    private javax.swing.JPanel FindPolicy;
    private javax.swing.JPanel PolicyInfo;
    private javax.swing.JMenuItem Update;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField buildYearText;
    private javax.swing.JButton byDateBut;
    private javax.swing.JComboBox<CarType> carComboBox;
    private javax.swing.JCheckBox cityChoice;
    private javax.swing.JComboBox<String> cityCombo;
    private javax.swing.JTextField cityText;
    private javax.swing.JTextField claimsText;
    private javax.swing.JLabel commentAgeLabel;
    private javax.swing.JTextField commentAgeText;
    private javax.swing.JRadioButton comprehensiveRadio;
    private javax.swing.JLabel dateFilterLabel;
    private javax.swing.JTextField dateFilterText;
    private javax.swing.JButton delBut;
    private javax.swing.JTextField expDayText;
    private javax.swing.JTextField expMonthText;
    private javax.swing.JTextField expYearText;
    private javax.swing.JLabel expiryLabel;
    private javax.swing.JButton findButton;
    private javax.swing.JButton findButton1;
    private javax.swing.JLabel findPolicyLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelText;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JLabel modelFilterLabel;
    private javax.swing.JTextField modelFilterText;
    private javax.swing.JTextField modelText;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextArea policyArea;
    private javax.swing.JTextField policyFindText;
    private javax.swing.JTextField policyHolderText;
    private javax.swing.JTextField policyIdText;
    private javax.swing.JTable policyTable;
    private javax.swing.JTable policyTable1;
    private javax.swing.JTextField priceText;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox sortCheck;
    private javax.swing.JTextField streetNumText;
    private javax.swing.JTextField streetText;
    private javax.swing.JTextField suburbText;
    private javax.swing.JPopupMenu tablePopMenu;
    private javax.swing.JRadioButton thirdPartyRadio;
    private javax.swing.JButton updateBut;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel vehicleDetailsLabel;
    // End of variables declaration//GEN-END:variables
}
